name: Deploy nginx to staging environment when merged to main branch

on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  deploy-nginx:
    name: Deploy poc-nginx
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup gcloud CLI for image-store
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SA_DATAFABRIKKEN_GCR_KEY }}
          export_default_credentials: true

      - name: Configure docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker eu.gcr.io

      - name: Build Docker image with GitHub commit sha tag
        run: docker build -t eu.gcr.io/datafabrikken-infra/poc-nginx:$GITHUB_SHA -t eu.gcr.io/datafabrikken-infra/poc-nginx:staging_latest .

      - name: Publish docker image to Google Cloud
        run: docker -- push eu.gcr.io/datafabrikken-infra/poc-nginx -a

      - name: Apply Helm template ${{ matrix.app }}
        run: |
          helm template \
          --set DOCKER_IMAGE_NAME="eu.gcr.io/datafabrikken-infra/poc-nginx:$GITHUB_SHA" \
          -f ./helm-sources/poc-nginx/staging.yaml \
          ./helm-sources/poc-nginx/ > ./kubectlapply-poc-nginx.yaml
          chmod o+w ./kubectlapply-poc-nginx.yaml
          cat kubectlapply-poc-nginx.yaml

      - name: Setup gcloud CLI for deploy
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.DATAFABRIKKEN_DEV_AUTODEPLOY }}
          export_default_credentials: true

      - name: Deploy to GCP
        run: |
          gcloud container clusters get-credentials datafabrikken-dev --region europe-north1-a --project datafabrikken-dev
          kubectl apply -f ./kubectlapply-poc-nginx.yaml --force